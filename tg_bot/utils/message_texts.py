from database import CrudeUser, CrudeSubscriptions, Subscriptions, CrudePayments


# –ö–Ω–æ–ø–∫–∞ —Å—Ç–∞—Ä—Ç
start_text = 'üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è, –¥—Ä—É–≥! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–æ–µ–≥–æ Telegram-–±–æ—Ç–∞ –ø–æ –ø—Ä–æ–¥–∞–∂–µ –∞–≤—Ç–æ—Ä—Å–∫–∏—Ö –∫—É—Ä—Å–æ–≤ üéìüìö'

info_bot_text = (
    "‚ú® <b>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞:</b>\n"
    "–ü—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ <b>Premium-–ø–æ–¥–ø–∏—Å–∫–∏</b> —Ç—ã –ø–æ–ª—É—á–∞–µ—à—å –¥–æ—Å—Ç—É–ø –≤ –∑–∞–∫—Ä—ã—Ç—ã–π Telegram-–∫–∞–Ω–∞–ª.\n\n"
    "üéÅ –í –∫–∞–Ω–∞–ª–µ —Ç—ã –±—É–¥–µ—à—å –ø–µ—Ä–≤—ã–º –ø–æ–ª—É—á–∞—Ç—å <b>—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –ø–æ–¥–∞—Ä–∫–∞—Ö –≤ Telegram</b> ‚Äî —Å—Ä–∞–∑—É –ø—Ä–∏ –∏—Ö –ø–æ—è–≤–ª–µ–Ω–∏–∏!\n\n"
    "üì≤ –£—Å–ø–µ–≤–∞–π –∫—É–ø–∏—Ç—å –ø–æ–¥–∞—Ä–∫–∏ —Ä–∞–Ω—å—à–µ –≤—Å–µ—Ö!"
)
# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –æ –ø—Ä–æ—Ñ–∏–ª–µ
async def get_profile_text(telegram_id: int) -> None | str:
    sub_con = await CrudeSubscriptions().get_user_subscriptions(telegram_id)
    user = await CrudeUser().get_user(telegram_id)
    if user:
        txt_user = (
            # f'üÜî –£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID: {user.id}'
            f'\nüë§ Telegram ID: {user.telegram_id}'
            f'\nüìõ –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user.user_name}'
            f'\n{f'‚è≥ –î–æ—Å—Ç—É–ø: {sub_con.day_count}' if sub_con else ''}'
        )
        return txt_user
    else:
        return None


status_txt = (
    "üìõ –°–µ–π—á–∞—Å –Ω–µ—Ç –Ω–æ–≤—ã—Ö –ø–æ–¥–∞—Ä–∫–æ–≤.\n"
    "‚úÖ –ö–∞–∫ —Ç–æ–ª—å–∫–æ –ø–æ—è–≤—è—Ç—Å—è ‚Äî —Ç—ã —Å—Ä–∞–∑—É –ø–æ–ª—É—á–∏—à—å –ø—É—à-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ!"
)

# –¢–µ–∫—Å—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –ø–æ–¥–ø–∏—Å–∫–∏
no_subs_text = (
    "‚ùå –£ —Ç–µ–±—è –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏ Premium.\n"
    "üí≥ –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∑–∞–∫—Ä—ã—Ç–æ–º—É –∫–∞–Ω–∞–ª—É, "
    "–æ—Ñ–æ—Ä–º–∏ –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –∫—É—Ä—Å –≤ –º–µ–Ω—é –Ω–∏–∂–µ."
)
# –ö–ë –ø–æ–∫—É–ø–∫–∏
pay_course_text = 'üí≥ –û–ø–ª–∞—Ç–∞ –∫—É—Ä—Å–∞: '

# üßæ –ú–µ–Ω—é –æ–ø–ª–∞—Ç—ã
pay_time_text = "üí≥ –ú–µ–Ω—é –æ–ø–ª–∞—Ç—ã"

# ‚úÖ –£—Å–ø–µ—à–Ω–∞—è –ø–æ–∫—É–ø–∫–∞ –∫—É—Ä—Å–∞
accept_course_text = "\n\nüéâ –¢—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª –ø—Ä–µ–º–∏—É–º!\nüìö –£–¥–∞—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è!"

# üõ†Ô∏è –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞
support_message_text = (
    "üõ†Ô∏è –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞\n"
    "üë§ @this_is_originall"
)

# ‚è≥ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–∫–æ—Ä–æ–º –æ–∫–æ–Ω—á–∞–Ω–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏
async def push_subs_text(day: int) -> str:
    return (
        f"‚ö†Ô∏è –í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –ü—Ä–µ–º–∏—É–º —Å–∫–æ—Ä–æ –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è!\n"
        f"üìÖ –û—Å—Ç–∞–ª–æ—Å—å: {day} –¥–Ω–µ–π"
    )

# ‚ùå –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ–∫–æ–Ω—á–∞–Ω–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏
async def end_push_sub_text(plan: str) -> str:
    return f"üö´ –í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ {plan} –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å."
